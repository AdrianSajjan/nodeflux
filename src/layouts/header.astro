---
import { cn } from "@/lib/utils";

const path = Astro.url.pathname;

const desktop = [
  {
    label: "Home",
    href: "/nodeflux/",
  },
  {
    label: "About Us",
    href: "/nodeflux/about",
  },
  {
    label: "Our Services",
    href: "/nodeflux/services",
  },
];

const mobile = [
  {
    label: "Home",
    href: "/nodeflux/",
  },
  {
    label: "About Us",
    href: "/nodeflux/about",
  },
  {
    label: "Our Services",
    href: "/nodeflux/services",
  },
  {
    label: "Contact Us",
    href: "/nodeflux/contact",
  },
];
---

<header class="h-24">
  <div class="container flex items-center justify-between relative z-30 h-full bg-background">
    <a href="/nodeflux/" class="w-auto sm:w-64 shrink-0">
      <img src="/nodeflux/nodeflux.png" alt="nodeflux" class="h-16 w-auto" />
    </a>
    <!-- Desktop Navigation -->
    <nav class="text-base hidden lg:flex items-center gap-8 shrink-0">
      {
        desktop.map((item) => (
          <a href={item.href} class={cn("hover:text-foreground/75 transition-colors", path === item.href ? "text-foreground" : "text-foreground/50")}>
            {item.label}
          </a>
        ))
      }
    </nav>
    <div class="hidden lg:flex items-center gap-8 shrink-0">
      <a href="/nodeflux/contact" class="inline-flex items-center gap-0.5 group">
        <div class="h-6 w-6 overflow-hidden">
          <div class="flex transition-transform duration-500 -translate-x-6 group-hover:translate-x-0">
            <div class="h-6 w-6 shrink-0 grid place-items-center">
              <div class="h-2 w-2 rounded-full bg-green-400 shrink-0 animate-pulse"/>  
            </div>    
            <div class="h-6 w-6 shrink-0 grid place-items-center">
              <div class="h-2 w-2 rounded-full bg-green-400 shrink-0 animate-pulse"/>  
            </div>    
          </div>
        </div>
        <span class="font-medium text-foreground/75">Open for projects</span>
      </a>
      <a href="/nodeflux/contact" class="h-11 bg-background no-underline group cursor-pointer relative shadow-2xl shadow-zinc-900 rounded-full p-px text-base font-medium leading-none inline-block">
        <span class="absolute inset-0 overflow-hidden rounded-full">
          <span class="absolute inset-0 rounded-full bg-[image:radial-gradient(75%_100%_at_50%_0%,rgba(56,189,248,0.6)_0%,rgba(56,189,248,0)_75%)] opacity-0 transition-opacity duration-500 group-hover:opacity-100"></span>
        </span>
        <div class="relative flex items-center z-10 rounded-full bg-background hover:bg-zinc-950 text-foreground/75 hover:text-foreground transition-colors h-full py-2 px-6 ring-1 ring-white/10">Contact Us</div>
        <span class="absolute -bottom-0 left-[1.125rem] h-px w-[calc(100%-2.25rem)] bg-gradient-to-r from-emerald-400/0 via-emerald-400/90 to-emerald-400/0 transition-opacity duration-500 group-hover:opacity-40"></span>
      </a>
    </div>
    <!-- Mobile Navigation -->
    <button id="mobile-navigation-button" class="flex lg:hidden items-center justify-center">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-7 6h7"></path>
      </svg>
    </button>
  </div>
  <div id="mobile-navigation-menu" class="w-full lg:hidden -translate-y-full pointer-events-none absolute transition-transform duration-500 ease-in-out overflow-hidden inset-0 top-20 z-20">
    <nav  class="flex flex-col bg-background px-10 py-14 items-center gap-8">
      {
        mobile.map((item) => (
          <a href={item.href} class={cn("hover:text-foreground/75 transition-colors text-center text-2xl font-medium", path === item.href ? "text-foreground" : "text-foreground/50")}>
            {item.label}
          </a>
        ))
      }
    </nav>
  </div>
</header>

<script>
  const visible = ["translate-y-0", "pointer-events-auto"];
  const hidden = ["-translate-y-full", "pointer-events-none"];
  
  const menu = document.getElementById("mobile-navigation-menu");
  const button = document.getElementById("mobile-navigation-button");
  
  let open = false;
  
  function handleToggle() {
    if(open) {
      hidden.map((className)=> menu?.classList.remove(className));
      visible.map((className)=> menu?.classList.add(className));
    } else {
      visible.map((className)=> menu?.classList.remove(className));
      hidden.map((className)=> menu?.classList.add(className));
    } 
    open = !open;
  };

  button?.addEventListener("click", handleToggle);
  handleToggle();
</script>